name: 🔌 Build GDExtension libs

on:
  workflow_call:
    inputs:
      ref:
        type: string
        default: ""
        description: "The branch, tag or SHA to checkout (leave empty for event SHA)"

  workflow_dispatch:
    inputs:
      ref:
        type: string
        default: ""
        description: "The branch, tag or SHA to checkout (leave empty for event SHA)"

permissions:
  contents: read

env:
  # Default SCons flags applied to each build.
  SCONSFLAGS: verbose=yes macos_deployment_target=11.0
  EM_VERSION: 3.1.45
  XCODE_VERSION: 16.2

jobs:
  build:
    name: ${{matrix.name}}
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 🐧 Linux (x86_64, release)
            runner: ubuntu-22.04
            platform: linux
            target: template_release
            arch: x86_64

          - name: 🐧 Linux (x86_64, debug)
            runner: ubuntu-22.04
            platform: linux
            target: editor
            arch: x86_64

          - name: 🐧 Linux (x86_32, release)
            runner: ubuntu-22.04
            platform: linux
            target: template_release
            arch: x86_32

          - name: 🐧 Linux (x86_32, debug)
            runner: ubuntu-22.04
            platform: linux
            target: editor
            arch: x86_32

          - name: 🐧 Linux (noop, arm64, release)
            runner: ubuntu-22.04-arm
            platform: linux
            target: template_release
            arch: arm64
            scons_flags: debug_symbols=no

          - name: 🐧 Linux (noop, arm64, debug)
            runner: ubuntu-22.04-arm
            platform: linux
            target: editor
            arch: arm64
            scons_flags: debug_symbols=no

          - name: 🪟 Windows (x86_64, release)
            runner: windows-latest
            platform: windows
            target: template_release
            arch: x86_64

          - name: 🪟 Windows (x86_64, debug)
            runner: windows-latest
            platform: windows
            target: editor
            arch: x86_64

          - name: 🪟 Windows (x86_32, release)
            runner: windows-latest
            platform: windows
            target: template_release
            arch: x86_32

          - name: 🪟 Windows (x86_32, debug)
            runner: windows-latest
            platform: windows
            target: editor
            arch: x86_32

          - name: 🪟 Windows (noop, arm64, release)
            runner: windows-latest
            platform: windows
            target: template_release
            arch: arm64
            scons_flags: debug_symbols=no

          - name: 🪟 Windows (noop, arm64, debug)
            runner: windows-latest
            platform: windows
            target: editor
            arch: arm64
            scons_flags: debug_symbols=no

          - name: 🍎 macOS (universal, release)
            runner: macos-latest
            platform: macos
            target: template_release
            arch: universal

          - name: 🍎 macOS (universal, debug)
            runner: macos-latest
            platform: macos
            target: editor
            arch: universal

          - name: 🤖 Android (arm64, release)
            runner: ubuntu-latest
            platform: android
            target: template_release
            arch: arm64

          - name: 🤖 Android (arm64, debug)
            runner: ubuntu-latest
            platform: android
            target: editor
            arch: arm64

          - name: 🤖 Android (arm32, release)
            runner: ubuntu-latest
            platform: android
            target: template_release
            arch: arm32

          - name: 🤖 Android (arm32, debug)
            runner: ubuntu-latest
            platform: android
            target: editor
            arch: arm32

          - name: 🤖 Android (x86_64, release)
            runner: ubuntu-latest
            platform: android
            target: template_release
            arch: x86_64

          - name: 🤖 Android (x86_64, debug)
            runner: ubuntu-latest
            platform: android
            target: editor
            arch: x86_64

          - name: 🍏 iOS (noop, arm64, release)
            runner: macos-latest
            platform: ios
            target: template_release
            arch: arm64
            scons-flags: debug_symbols=no

          - name: 🍏 iOS (noop, arm64, debug)
            runner: macos-latest
            platform: ios
            target: editor
            arch: arm64
            scons-flags: debug_symbols=no

          - name: 🍏 iOS (noop, simulator, release)
            runner: macos-latest
            platform: ios
            target: template_release
            arch: universal
            scons-flags: ios_simulator=yes debug_symbols=no

          - name: 🍏 iOS (noop, simulator, debug)
            runner: macos-latest
            platform: ios
            target: editor
            arch: universal
            scons-flags: ios_simulator=yes debug_symbols=no

          - name: 🌐 Web (noop, threads, release)
            runner: ubuntu-latest
            platform: web
            target: template_release
            arch: wasm32
            scons-flags: threads=yes debug_symbols=no

          - name: 🌐 Web (noop, threads, debug)
            runner: ubuntu-latest
            platform: web
            target: editor
            arch: wasm32
            scons-flags: threads=yes debug_symbols=no

          - name: 🌐 Web (noop, nothreads, release)
            runner: ubuntu-latest
            platform: web
            target: template_release
            arch: wasm32
            scons-flags: threads=no debug_symbols=no

          - name: 🌐 Web (noop, nothreads, debug)
            runner: ubuntu-latest
            platform: web
            target: editor
            arch: wasm32
            scons-flags: threads=no debug_symbols=no

    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{inputs.ref}}

      - name: Install Linux dependencies (x86_64, arm64)
        if: matrix.platform == 'linux' && matrix.arch != 'x86_32'
        run: |
          sudo apt update
          sudo apt install libcurl4-openssl-dev

      - name: Install Linux dependencies (x86_32)
        if: matrix.platform == 'linux' && matrix.arch == 'x86_32'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install \
              libcurl4-openssl-dev:i386 \
              g++-multilib gcc-multilib \
              libc6-dev-i386 \
              zlib1g-dev:i386

      - name: Install SCons
        run: |
          python -m pip install scons
          python --version
          scons --version

      - name: Install Emscripten
        if: matrix.platform == 'web'
        uses: mymindstorm/setup-emsdk@6ab9eb1bda2574c4ddb79809fc9247783eaf9021 # v14
        with:
          version: ${{env.EM_VERSION}}
          no-cache: true

      - name: Select Xcode version
        if: matrix.platform == 'macos'
        run: |
          sudo xcode-select -s /Applications/Xcode_${{env.XCODE_VERSION}}.app/Contents/Developer
          xcodebuild -version
          clang --version

      - name: Set up Java 17
        if: matrix.platform == 'android'
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 17

      - name: Set up NDK
        if: matrix.platform == 'android'
        uses: nttld/setup-ndk@afb4c9964b521afb97c864b7d40b11e6911bd410 # v1.5.0
        with:
          ndk-version: r23c
          link-to-sdk: true

      - name: Prepare SCONSFLAGS
        shell: bash
        run: |
          SCONSFLAGS="$SCONSFLAGS ${{ matrix.scons-flags }}"
          # If not specified, default to debug_symbols=yes.
          if [[ "$SCONSFLAGS" != *"debug_symbols="* ]]; then
            SCONSFLAGS="$SCONSFLAGS debug_symbols=yes"
          fi
          echo "SCONSFLAGS=$SCONSFLAGS" >> $GITHUB_ENV

      - name: Compile GDExtension library
        shell: bash
        run: |
          echo "Starting SCons build with additional flags: ${SCONSFLAGS}"
          scons platform=${{matrix.platform}} target=${{matrix.target}} arch=${{matrix.arch}}

      - name: Separate debug symbols on Linux
        if: matrix.platform == 'linux'
        env:
          BUILD_TYPE: ${{matrix.target == 'template_release' && 'release' || 'debug'}}
        shell: bash
        run: |
          if [ -d "project/addons/sentry/bin/linux/${{matrix.arch}}" ]; then
            cd project/addons/sentry/bin/linux/${{matrix.arch}}
          else
            cd project/addons/sentry/bin/noop
          fi
          lib=libsentry.${{matrix.platform}}.${BUILD_TYPE}.${{matrix.arch}}.so
          objcopy --only-keep-debug ${lib} ${lib}.debug
          objcopy --add-gnu-debuglink ${lib}.debug ${lib}
          strip --strip-debug ${lib}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sentry.${{matrix.platform}}.${{matrix.target}}.${{matrix.arch}}${{ contains(matrix.scons-flags, 'threads=no') && '.nothreads' || '' }}
          path: |
            project/
            !project/addons/gdUnit4
            !project/test/

  android-plugin:
    name: 🤖 Android Plugin AARs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.ref}}

      - name: Set up Java 17
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 17

      - name: Build libraries
        run: ./gradlew assemble

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sentry.android.godot_plugin
          path: |
            project/
            !project/
            project/addons/sentry/bin/android/sentry_android_godot_plugin.debug.aar
            project/addons/sentry/bin/android/sentry_android_godot_plugin.release.aar

  package:
    name: 📦 Package GDExtension
    runs-on: ubuntu-latest
    needs: [build, android-plugin]
    steps:
      - name: Merge artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: sentry-godot-gdextension
          pattern: sentry.*
          delete-merged: true
