name: ‚öôÔ∏è CI

on:
  push:
    branches:
      - "main"
      - "release/**"
    paths-ignore:
      - "*.md"

  pull_request:
    paths-ignore:
      - "*.md"

# Cancel in-progress runs on PR update and on push.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-extension:
    name: üîå Build GDExtension
    uses: ./.github/workflows/build_gdextension.yml

  static-checks:
    name: üîé Static checks
    needs: build-extension
    uses: ./.github/workflows/static_checks.yml

  unit-tests:
    name: üß™ Unit tests
    needs: build-extension
    uses: ./.github/workflows/unit_tests.yml

  package:
    name: üì¶ Package
    runs-on: ubuntu-latest
    needs: build-extension

    env:
      CODESIGN_VERSION: 0.29.0
      CODESIGN_CHECKSUM: dbe85cedd8ee4217b64e9a0e4c2aef92ab8bcaaa41f20bde99781ff02e600002
      APPLE_CERT_PATH: /tmp/certs.p12
      APPLE_API_KEY_PATH: /tmp/apple_key.json

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sentry-godot-gdextension
          path: artifact/

      - name: Install rcodesign
        run: |
          curl -L https://github.com/indygreg/apple-platform-rs/releases/download/apple-codesign/${CODESIGN_VERSION}/apple-codesign-${CODESIGN_VERSION}-x86_64-unknown-linux-musl.tar.gz \
            -o rcodesign.tar.gz
          echo "${CODESIGN_CHECKSUM}  rcodesign.tar.gz" | sha256sum -c -
          tar -xz --strip-components=1 -f rcodesign.tar.gz
          mv rcodesign /usr/local/bin/rcodesign
          rm rcodesign.tar.gz

      - name: Decode Apple signing certificate and API key
        env:
          APPLE_CERT_DATA: ${{ secrets.APPLE_CERT_DATA }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
        run: |
          if [ -z "$APPLE_CERT_DATA" ] || [ -z "$APPLE_API_KEY" ]; then
            echo "::error::Codesign failed - missing Apple signing certificate or API key."
            exit 1
          else
            echo "$APPLE_CERT_DATA" | base64 --decode > ${{ env.APPLE_CERT_PATH }}
            echo "$APPLE_API_KEY" | base64 --decode > ${{ env.APPLE_API_KEY_PATH }}
          fi

      - name: Sign macOS binaries
        run: |
          rcodesign sign --for-notarization \
            --p12-file ${{ env.APPLE_CERT_PATH }} --p12-password ${{ secrets.APPLE_CERT_PASSWORD }} \
            artifact/addons/sentrysdk/bin/macos/libsentrysdk.macos.debug.framework/libsentrysdk.macos.debug
          rcodesign sign --for-notarization \
            --p12-file ${{ env.APPLE_CERT_PATH }} --p12-password ${{ secrets.APPLE_CERT_PASSWORD }} \
            artifact/addons/sentrysdk/bin/macos/libsentrysdk.macos.release.framework/libsentrysdk.macos.release
          rcodesign sign --for-notarization \
            --p12-file ${{ env.APPLE_CERT_PATH }} --p12-password ${{ secrets.APPLE_CERT_PASSWORD }} \
            # --entitlements-xml-path entitlements.plist \
            artifact/addons/sentrysdk/bin/macos/crashpad_handler

      - name: Notarize macOS binaries
        if: false # disable for now
        run: |
          rcodesign notary-submit --api-key-file ${{ env.APPLE_API_KEY_PATH }} --wait \
            artifact/addons/sentrysdk/bin/macos/libsentrysdk.macos.debug.framework/libsentrysdk.macos.debug
          rcodesign notary-submit --api-key-file ${{ env.APPLE_API_KEY_PATH }} --wait \
            artifact/addons/sentrysdk/bin/macos/libsentrysdk.macos.release.framework/libsentrysdk.macos.release
          rcodesign notary-submit --api-key-file ${{ env.APPLE_API_KEY_PATH }} --wait \
            artifact/addons/sentrysdk/bin/macos/crashpad_handler

      - name: Prepare artifact
        shell: bash
        run: |
          # * Fix crashpad_handler permissions, workaround for https://github.com/actions/upload-artifact/issues/38
          chmod +x artifact/addons/sentrysdk/bin/{linux,macos}/crashpad_handler
          # * Create release archive
          version=$(grep 'VERSION =' SConstruct | cut -d '"' -f 2)
          git_short_sha=$(git rev-parse --short HEAD)
          archive_file="sentry-godot-gdextension-${version}+${git_short_sha}.zip"
          cd artifact/
          mkdir ${GITHUB_WORKSPACE}/out/
          zip -r ${GITHUB_WORKSPACE}/out/${archive_file} ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.sha}}
          path: out/*

  # Deleting "sentry-godot-gdextension" artifact due to broken file permissions.
  # This encourages using the artifact from the "package" job instead which has correct permissions.
  # See issue: https://github.com/getsentry/sentry-godot/issues/41
  cleanup:
    name: üóëÔ∏è Cleanup
    needs: [package, unit-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Delete sentry-godot-gdextension artifact
        uses: geekyeggo/delete-artifact@f275313e70c08f6120db482d7a6b98377786765b # v5.1.0
        with:
          name: sentry-godot-gdextension
