<?xml version="1.0" encoding="UTF-8" ?>
<class name="SentryLog" inherits="RefCounted" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Log entry in Sentry.
	</brief_description>
	<description>
		[SentryLog] represents a single entry in Sentry Logs (aka structured logging).
		To learn more about logs in Sentry, visit the [url=https://docs.sentry.io/product/explore/logs/]Sentry Logs[/url] product guide.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_attributes">
			<return type="void" />
			<param index="0" name="attributes" type="Dictionary" />
			<description>
				Adds multiple attributes to the log entry from a Dictionary. Each key-value pair in the dictionary becomes an attribute, where the key serves as the attribute name and the value as the attribute value. This method is most efficient when adding multiple attributes at once. For single attributes, use [method set_attribute] instead.
				[b]Note:[/b] Attributes support integers, booleans, floats, and strings. Other data types will be automatically converted to strings.
			</description>
		</method>
		<method name="get_attribute" qualifiers="const">
			<return type="Variant" />
			<param index="0" name="name" type="String" />
			<description>
				Retrieves the value of an attribute by its name. If the attribute does not exist, returns [code]null[/code].
			</description>
		</method>
		<method name="remove_attribute">
			<return type="void" />
			<param index="0" name="name" type="String" />
			<description>
				Removes an attribute from the log entry by its name.
			</description>
		</method>
		<method name="set_attribute">
			<return type="void" />
			<param index="0" name="name" type="String" />
			<param index="1" name="value" type="Variant" />
			<description>
				Sets the value of an attribute by its name. If the attribute does not exist, it will be created. For adding multiple attributes at once, use [method add_attributes] instead.
				[b]Note:[/b] Attributes support integers, booleans, floats, and strings. Other data types will be automatically converted to strings.
			</description>
		</method>
	</methods>
	<members>
		<member name="body" type="String" setter="set_body" getter="get_body">
			The main text content of the log message.
		</member>
		<member name="level" type="int" setter="set_level" getter="get_level" enum="SentryLog.LogLevel">
			The severity level of the log entry. Uses the [enum LogLevel] enumeration to specify how critical the message is, ranging from trace-level debugging information to fatal errors.
		</member>
	</members>
	<constants>
		<constant name="LOG_LEVEL_TRACE" value="0" enum="LogLevel">
			A fine-grained debugging event. Typically disabled in default configurations.
		</constant>
		<constant name="LOG_LEVEL_DEBUG" value="1" enum="LogLevel">
			A debugging event.
		</constant>
		<constant name="LOG_LEVEL_INFO" value="2" enum="LogLevel">
			An informational event. Indicates that an event happened.
		</constant>
		<constant name="LOG_LEVEL_WARN" value="3" enum="LogLevel">
			A warning event. Not an error but is likely more important than an informational event.
		</constant>
		<constant name="LOG_LEVEL_ERROR" value="4" enum="LogLevel">
			An error event. Something went wrong.
		</constant>
		<constant name="LOG_LEVEL_FATAL" value="5" enum="LogLevel">
			A fatal error such as application or system crash.
		</constant>
	</constants>
</class>
